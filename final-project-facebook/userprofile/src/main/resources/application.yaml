spring:
  security:
    jwt:
      secret: ${JWT_SECRET}
  jpa:
    show-sql: false
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

  config:
    import: optional:file:./userprofile/.env[.properties]

  datasource:
    url: jdbc:postgresql://${HOST}:5432/${POSTGRES_DATABASE}?currentSchema=${POSTGRES_SCHEMA}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

    hikari:
      minimum-idle: 3       # Минимальное количество ожидающих (неактивных) соединений
      maximum-pool-size: 5   # Максимальное количество активных соединений в пуле
      idle-timeout: 300000   # Время в миллисекундах, по истечении которого неактивное соединение будет закрыто (5 минут)
      max-lifetime: 1200000  # Максимальное время жизни соединения в миллисекундах (20 минут)
      connection-timeout: 20000 # Максимальное время ожидания получения соединения из пула в миллисекундах (20 секунд)

  liquibase:
    change-log: classpath:liquibase/db.changelog.yaml
    enabled: true
    default-schema: ${POSTGRES_SCHEMA}

  application:
    name: userprofile

minio:
  bucket-name: ${MINIO_BUCKET}
  url: ${MINIO_URL}
  access-key: ${MINIO_ACCESS_KEY}
  secret-key: ${MINIO_SECRET_KEY}

server:
  port: ${APP_PORT}
#gateway:
#  url: ${GATEWAY_URL}

logging:
  level:
    root: ERROR
---

spring:
  config:
    activate:
      on-profile: local
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
      schema-locations: classpath:schema-h2.sql
  datasource:
    url: jdbc:h2:mem:data
    username: root
    password:
    driver-class-name: org.h2.Driver
  jpa:
    defer-datasource-initialization: false
    show-sql: true
  logging:
    level:
      org: info
      com: off
  liquibase:
    enabled: false
